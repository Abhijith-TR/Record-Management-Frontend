openapi: 3.0.0
info:
  title: IRMS
  contact: {}
  version: "1.0"
servers:
  - url: https://localhost:3000/api
    variables: {}
paths:
  /authorize/user:
    post:
      tags:
        - User
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
            example:
              email: xyz@abc.com
              password: abcd
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /user/change:
    patch:
      tags:
        - User
      summary: Change User Password
      operationId: ChangeUserPassword
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUserPasswordRequest"
            example:
              password: abcd
              newPassword: efgh
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /user/records/{entryNumber}:
    get:
      tags:
        - User
      parameters:
        - in: path
          name: entryNumber
          schema:
            type: string
          required: true
          description: Entry Number of the user to login
      summary: Get Records
      operationId: GetRecords
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /user/notif/{subjectCode}:
    get:
      tags:
        - User
      parameters:
        - in: path
          name: subjectCode
          schema:
            type: string
          required: true
          description: Subject code
      summary: Get Notifications
      operationId: GetNotifications
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/register/user:
    post:
      tags:
        - Super
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuperRegisterUserRequest"
            example:
              name: abcd
              entryNumber: xyz123
              degree: PhD
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /super/register/admin:
    post:
      tags:
        - Super
      summary: Register Admin
      operationId: RegisterAdmin
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAdminRequest"
            example:
              name: xyz
              email: abc@xyz.com
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /super/delete/records/{subjectCode}:
    delete:
      tags:
        - Super
      parameters:
        - in: path
          name: subjectCode
          schema:
            type: string
          required: true
          description: Subject Code
      summary: Delete All Subject Records
      operationId: DeleteAllSubjectRecords
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /super/delete/user/{entryNumber}:
    delete:
      tags:
        - Super
      parameters:
        - in: path
          name: entryNumber
          schema:
            type: string
          required: true
          description: Entry number of the student
      summary: Delete User
      operationId: DeleteUser
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /super/delete/admin/{email}:
    delete:
      tags:
        - Super
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: Email of the admin
      summary: Delete Admin
      operationId: DeleteAdmin
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /authorize/admin:
    post:
      tags:
        - Admin
      summary: Login Admin / Super
      operationId: LoginAdmin/Super
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginAdminRequest"
            example:
              email: abc@xyz.com
              password: abcd
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /admin/change:
    patch:
      tags:
        - Admin
      summary: Change Admin / Super Password
      operationId: ChangeAdmin/SuperPassword
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeAdminPasswordRequest"
            example:
              password: abcd
              newPassword: efgh
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/records/get/{entryNumber}:
    get:
      tags:
        - Admin
      parameters:
        - in: path
          name: entryNumber
          schema:
            type: string
          required: true
          description: Entry number of the student
      summary: Get Single User Records
      operationId: GetSingleUserRecords
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/records/{subjectCode}:
    get:
      tags:
        - Admin
      parameters:
        - in: path
          name: subjectCode
          schema:
            type: string
          required: true
          description: Subject code
      summary: Get Subject-wise Records
      operationId: GetSubject-wiseRecords
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/records/single:
    post:
      tags:
        - Admin
      summary: Create Record
      operationId: CreateRecord
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminCreateRecordRequest"
            example:
              entryNumber: xyz
              grade: B
              subjectCode: abcde
              semester: "3"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/records/{entryNumber}/{subjectCode}:
    parameters:
      - in: path
        name: entryNumber
        schema:
          type: string
        required: true
        description: Entry Number
      - in: path
        name: subjectCode
        schema:
          type: string
        required: true
        description: Subject Code
    delete:
      tags:
        - Admin
      summary: Delete Single Record
      operationId: DeleteSingleRecord
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Admin
      summary: Update Grade
      operationId: UpdateGrade
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUpdateSingleRecordRequest"
            example:
              grade: A
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/records:
    post:
      tags:
        - Admin
      summary: Create Subject
      operationId: CreateSubject
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminCreateSubjectRequest"
            example:
              subjectCode: abcde
              subjectName: DSA
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/notif:
    post:
      tags:
        - Admin
      summary: Post Notifications
      operationId: PostNotifications
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminPostNotificationsRequest"
            example:
              subjectCode: abcde
              announcement: Get Work Done
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/notif/{subjectCode}/{notificationID}:
    delete:
      tags:
        - Admin
      parameters:
        - in: path
          name: subjectCode
          schema:
            type: string
          required: true
          description: Entry Number
        - in: path
          name: notificationID
          schema:
            type: string
          required: true
          description: ID of the Notification in Database
      summary: Remove Notifications
      operationId: RemoveNotifications
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /admin/notif/{subjectCode}:
    get:
      tags:
        - Admin
      parameters:
        - in: path
          name: subjectCode
          schema:
            type: string
          required: true
          description: Subject Code
      summary: Get Notifications
      operationId: GetNotifications1
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: abc@xyz.in
        password: abcdefgh
    SuperRegisterUserRequest:
      title: SuperRegisterUserRequest
      required:
        - name
        - entryNumber
        - degree
      type: object
      properties:
        name:
          type: string
        entryNumber:
          type: string
        degree:
          type: string
      example:
        name: xyz
        entryNumber: abcdefgh
        degree: PhD
    LoginAdminRequest:
      title: LoginAdminRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: abc@xyz.com
        password: something
    RegisterAdminRequest:
      title: RegisterAdminRequest
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      example:
        name: abcd
        email: abc@xyz.com
    ChangeUserPasswordRequest:
      title: ChangeUserPasswordRequest
      required:
        - password
        - newPassword
      type: object
      properties:
        password:
          type: string
        newPassword:
          type: string
      example:
        password: something
        newPassword: somethingelse
    ChangeAdminPasswordRequest:
      title: ChangeAdminPasswordRequest
      required:
        - password
        - newPassword
      type: object
      properties:
        password:
          type: string
        newPassword:
          type: string
      example:
        password: something
        newPassword: somethingelse
    AdminCreateRecordRequest:
      title: AdminCreateRecordRequest
      required:
        - entryNumber
        - grade
        - subjectCode
        - semester
      type: object
      properties:
        entryNumber:
          type: string
        grade:
          type: string
        subjectCode:
          type: string
        semester:
          type: string
      example:
        entryNumber: abcdefgh
        grade: B
        subjectCode: abcde
        semester: "3"
    AdminUpdateSingleRecordRequest:
      title: AdminUpdateSingleRecordRequest
      required:
        - grade
      type: object
      properties:
        grade:
          type: string
      example:
        grade: A
    AdminCreateSubjectRequest:
      title: AdminCreateSubjectRequest
      required:
        - subjectCode
        - subjectName
      type: object
      properties:
        subjectCode:
          type: string
        subjectName:
          type: string
      example:
        subjectCode: abcde
        subjectName: DSA
    AdminPostNotificationsRequest:
      title: AdminPostNotificationsRequest
      required:
        - subjectCode
        - announcement
      type: object
      properties:
        subjectCode:
          type: string
        announcement:
          type: string
      example:
        subjectCode: abcde
        announcement: something
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Misc
    description: ""
  - name: User
    description: ""
  - name: Super
    description: ""
  - name: Admin
    description: ""
